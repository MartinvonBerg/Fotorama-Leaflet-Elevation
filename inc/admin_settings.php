<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */
namespace mvbplugins\fotoramamulti;

class FotoramaElevation {
	private $fotorama_elevation_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'fotorama_elevation_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'fotorama_elevation_page_init' ) );
	}

	public function fotorama_elevation_add_plugin_page() {
		add_options_page(
			'Fotorama-Elevation', // page_title
			'Fotorama-Elevation', // menu_title
			'manage_options', // capability
			'fotorama-elevation', // menu_slug
			array( $this, 'fotorama_elevation_create_admin_page' ) // function
		);
	}

	public function fotorama_elevation_create_admin_page( $out ) {
		$this->fotorama_elevation_options = get_option( 'fotorama_elevation_option_name' ); 
		$path_to_gpx_files_2 = $this->fotorama_elevation_options['path_to_gpx_files_2'];
		if (isset($_POST['admin_settings'])){
			$out =  '[fotomulti gxppath="'. $path_to_gpx_files_2 .'" imgpath=""]';
		}
		?>

		<div class="wrap">
			<h2>Settings for Fotorama-Elevation Plugin</h2>
			<h4>General Settings for the Fotorama Elevation Plugin that are used for every page or post where the Plugin is used. All settings can be overwritten by parameters of the shortcode.</h4>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'fotorama_elevation_option_group' );
					do_settings_sections( 'fotorama-elevation-admin' );
					submit_button();
				?>
			</form>
            <h3>List of shortcode Parameters:</h3>
			<p><b>Example: </b> [fotomulti imgpath="Alben_Website/Aosta_Urtier" gpxfile="Urtier_2018_08_18_MTB.gpx"]</p>

			<style type="text/css">
				.tg  {border-collapse:collapse;border-spacing:2;background-color: white;}
				.tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
				overflow:hidden;padding:10px 5px;word-break:normal;}
				.tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;
				font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
				.tg .tg-dncm{border-color:inherit;font-weight:bold;position:-webkit-sticky;position:sticky;text-align:left;top:-1px;
				vertical-align:top;will-change:transform;background-color: goldenrod;}
				.tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}
				.tg tr:nth-child(even) {background-color:lightgray;}
		
			</style>

			<table class="tg">
			<thead>
			<tr>
				<th class="tg-dncm">Shortcode</th>
				<th class="tg-dncm">Value (Default first)</th>
				<th class="tg-dncm">Example</th>
				<th class="tg-dncm">Description</th>
			</tr>
			</thead>
			<tbody>
			<tr>
				<td class="tg-0pky">gpxpath</td>
				<td class="tg-0pky">gpx</td>
				<td class="tg-0pky">gpxpath="gpx"</td>
				<td class="tg-0pky">Path to file with GPX-Track(s) relative to the Wordpress uploads folder, e.g: ../wordpress/wp-content/uploads/gpx</td>
			</tr>
			<tr>
				<td class="tg-0pky">gpxfile</td>
				<td class="tg-0pky">'' / test.gpx</td>
				<td class="tg-0pky">gpxfile="test.gpx"</td>
				<td class="tg-0pky">File with gpx-track, e.g: ../wordpress/wp-content/uploads/gpx/test.gpx</td>
			</tr>
			<tr>
				<td class="tg-0pky">mapheight</td>
				<td class="tg-0pky">450</td>
				<td class="tg-0pky">mapheight="450"</td>
				<td class="tg-0pky">Height of the leaflet map in pixels (px)</td>
			</tr>
			<tr>
				<td class="tg-0pky">chartheight</td>
				<td class="tg-0pky">200</td>
				<td class="tg-0pky">chartheight="200"</td>
				<td class="tg-0pky">Height of the leaflet elevation chart in pixels (px)</td>
			</tr>
			<tr>
				<td class="tg-0pky">imgpath</td>
				<td class="tg-0pky">Bilder</td>
				<td class="tg-0pky">imgpath="Bilder"</td>
				<td class="tg-0pky">Path the images relative to the Wordpress uploads folder, e.g: ../wordpress/wp-content/uploads/galleries/holiday2020</td>
			</tr>
			<tr>
				<td class="tg-0pky">dload</td>
				<td class="tg-0pky">yes / no</td>
				<td class="tg-0pky">dload="yes"</td>
				<td class="tg-0pky">Provide download link for the GPX-Tracks, if "yes".</td>
			</tr>
			<tr>
				<td class="tg-0pky">alttext</td>
				<td class="tg-0pky">''</td>
				<td class="tg-0pky">alttext="Image Slider with map from holiday"</td>
				<td class="tg-0pky">Alltext for the fotorama slider for SEO</td>
			</tr>
			<tr>
				<td class="tg-0pky">ignoresort</td>
				<td class="tg-0pky">false / true</td>
				<td class="tg-0pky">ignoresort="false"</td>
				<td class="tg-0pky">Ignore custom sort even if provided by Wordpress. If checked sort by date ascending</td>
			</tr>
			<tr>
				<td class="tg-0pky">showadress</td>
				<td class="tg-0pky">true / false</td>
				<td class="tg-0pky">showadress="true"</td>
				<td class="tg-0pky">Show start adress of the tour. GPX-coords are taken from the first point in the GPX-track or from the first image</td>
			</tr>
			<tr>
				<td class="tg-0pky">adresstext</td>
				<td class="tg-0pky">Startadresse</td>
				<td class="tg-0pky">adresstext="Startadresse"</td>
				<td class="tg-0pky">Text for header above start address</td>
			</tr>
			<tr>
				<td class="tg-0pky">requiregps</td>
				<td class="tg-0pky">true / false</td>
				<td class="tg-0pky">requiregps="true"</td>
				<td class="tg-0pky">Require images to have GPS-data in EXIF. Show image only if it provides GPS-Data in its EXIF.</td>
			</tr>
			<tr>
				<td class="tg-0pky">maxwidth</td>
				<td class="tg-0pky">600</td>
				<td class="tg-0pky">maxwidth="600"</td>
				<td class="tg-0pky">Maximum width of the whole container with slider and map</td>
			</tr>
			<tr>
				<td class="tg-0pky">showcaption</td>
				<td class="tg-0pky">true / false</td>
				<td class="tg-0pky">showcaption="true"</td>
				<td class="tg-0pky">Show the caption in the fotorama slider</td>
			</tr>
			<tr>
				<td class="tg-0pky">eletheme</td>
				<td class="tg-0pky">lime-theme</td>
				<td class="tg-0pky">eletheme="lime-theme"</td>
				<td class="tg-0pky">Theme for leaflet elevation. Other themes are: steelblue-theme, purple-theme, yellow-theme, red-theme, magenta-theme, lightblue-theme and martin-theme. Martin-theme is my special theme.</td>
			</tr>
			</tbody>

			</table>
			<form method="post" action="">	
			<?php
			submit_button( 'Generate Shortcode', 'primary', "admin_settings" );
			?>
			<p>
			<?php echo 'Shortcode: ' . $out; ?>
			</p>
			</form>

		</div>
	<?php }

	public function fotorama_elevation_page_init() {
		register_setting(
			'fotorama_elevation_option_group', // option_group
			'fotorama_elevation_option_name', // option_name
			array( $this, 'fotorama_elevation_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'fotorama_elevation_setting_section', // id
			'Fotorama Settings', // title
			array( $this, 'fotorama_elevation_section_info' ), // callback
			'fotorama-elevation-admin' // page
		);

		add_settings_field(
			'path_to_images_for_fotorama_0', // id
			'Path to Images for Fotorama', // title
			array( $this, 'path_to_images_for_fotorama_0_callback' ), // callback
			'fotorama-elevation-admin', // page
			'fotorama_elevation_setting_section' // section
        );
        
        add_settings_field(
			'show_caption_4', // id
			'Show Caption', // title
			array( $this, 'show_caption_4_callback' ), // callback
			'fotorama-elevation-admin', // page
			'fotorama_elevation_setting_section' // section
        );
        
        add_settings_field(
			'images_with_gps_required_5', // id
			'Images with GPS required', // title
			array( $this, 'images_with_gps_required_5_callback' ), // callback
			'fotorama-elevation-admin', // page
			'fotorama_elevation_setting_section' // section
		);

		add_settings_field(
			'ignore_custom_sort_6', // id
			'Ignore custom sort', // title
			array( $this, 'ignore_custom_sort_6_callback' ), // callback
			'fotorama-elevation-admin', // page
			'fotorama_elevation_setting_section' // section
        );

        add_settings_field(
			'general_text_for_the_fotorama_alt_9', // id
			'General text for the Fotorama alt', // title
			array( $this, 'general_text_for_the_fotorama_alt_9_callback' ), // callback
			'fotorama-elevation-admin', // page
			'fotorama_elevation_setting_section' // section
		);
        
        add_settings_section(
			'leaflet_elevation_setting_section', // id
			'Leaflet Elevation Settings', // title
			array( $this, 'leaflet_elevation_section_info' ), // callback
			'fotorama-elevation-admin' // page
		);

		add_settings_field(
			'colour_theme_for_leaflet_elevation_1', // id
			'Colour Theme for Leaflet Elevation', // title
			array( $this, 'colour_theme_for_leaflet_elevation_1_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);

		add_settings_field(
			'path_to_gpx_files_2', // id
			'Path to GPX-Files', // title
			array( $this, 'path_to_gpx_files_2_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);

		add_settings_field(
			'download_gpx_files_3', // id
			'Download GPX-Files', // title
			array( $this, 'download_gpx_files_3_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);

		add_settings_field(
			'show_address_of_start_7', // id
			'Show address of start', // title
			array( $this, 'show_address_of_start_7_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);

		add_settings_field(
			'text_for_start_address_8', // id
			'Text for Start address', // title
			array( $this, 'text_for_start_address_8_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);

		add_settings_field(
			'height_of_map_10', // id
			'Height of Map', // title
			array( $this, 'height_of_map_10_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);

		add_settings_field(
			'height_of_chart_11', // id
			'Height of Chart', // title
			array( $this, 'height_of_chart_11_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);

		add_settings_field(
			'max_width_of_container_12', // id
			'Max Width of Container', // title
			array( $this, 'max_width_of_container_12_callback' ), // callback
			'fotorama-elevation-admin', // page
			'leaflet_elevation_setting_section' // section
		);
	}

	public function fotorama_elevation_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['path_to_images_for_fotorama_0'] ) ) {
			$sanitary_values['path_to_images_for_fotorama_0'] = sanitize_text_field( $input['path_to_images_for_fotorama_0'] );
		}

		if ( isset( $input['colour_theme_for_leaflet_elevation_1'] ) ) {
			$sanitary_values['colour_theme_for_leaflet_elevation_1'] = $input['colour_theme_for_leaflet_elevation_1'];
		}

		if ( isset( $input['path_to_gpx_files_2'] ) ) {
			$sanitary_values['path_to_gpx_files_2'] = sanitize_text_field( $input['path_to_gpx_files_2'] );
		}

		if ( isset( $input['download_gpx_files_3'] ) ) {
			$sanitary_values['download_gpx_files_3'] = $input['download_gpx_files_3'];
		}

		if ( isset( $input['show_caption_4'] ) ) {
			$sanitary_values['show_caption_4'] = $input['show_caption_4'];
		}

		if ( isset( $input['images_with_gps_required_5'] ) ) {
			$sanitary_values['images_with_gps_required_5'] = $input['images_with_gps_required_5'];
		}

		if ( isset( $input['ignore_custom_sort_6'] ) ) {
			$sanitary_values['ignore_custom_sort_6'] = $input['ignore_custom_sort_6'];
		}

		if ( isset( $input['show_address_of_start_7'] ) ) {
			$sanitary_values['show_address_of_start_7'] = $input['show_address_of_start_7'];
		}

		if ( isset( $input['text_for_start_address_8'] ) ) {
			$sanitary_values['text_for_start_address_8'] = sanitize_text_field( $input['text_for_start_address_8'] );
		}

		if ( isset( $input['general_text_for_the_fotorama_alt_9'] ) ) {
			$sanitary_values['general_text_for_the_fotorama_alt_9'] = sanitize_text_field( $input['general_text_for_the_fotorama_alt_9'] );
		}

		if ( isset( $input['height_of_map_10'] ) ) {
			$sanitary_values['height_of_map_10'] = sanitize_text_field( $input['height_of_map_10'] );
		}

		if ( isset( $input['height_of_chart_11'] ) ) {
			$sanitary_values['height_of_chart_11'] = sanitize_text_field( $input['height_of_chart_11'] );
		}

		if ( isset( $input['max_width_of_container_12'] ) ) {
			$sanitary_values['max_width_of_container_12'] = sanitize_text_field( $input['max_width_of_container_12'] );
		}

		return $sanitary_values;
	}

	public function fotorama_elevation_section_info() {	
    }
    
    public function leaflet_elevation_section_info() {
	}

	public function path_to_images_for_fotorama_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="fotorama_elevation_option_name[path_to_images_for_fotorama_0]" id="path_to_images_for_fotorama_0" value="%s">',
			isset( $this->fotorama_elevation_options['path_to_images_for_fotorama_0'] ) ? esc_attr( $this->fotorama_elevation_options['path_to_images_for_fotorama_0']) : ''
		);
	}

	public function colour_theme_for_leaflet_elevation_1_callback() {
		?> <select name="fotorama_elevation_option_name[colour_theme_for_leaflet_elevation_1]" id="colour_theme_for_leaflet_elevation_1">
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'martin-theme') ? 'selected' : '' ; ?>
			<option value="martin-theme" <?php echo $selected; ?>>Martin</option>
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'lime-theme') ? 'selected' : '' ; ?>
			<option value="lime-theme" <?php echo $selected; ?>>Lime</option>
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'steelblue-theme') ? 'selected' : '' ; ?>
			<option value="steelblue-theme" <?php echo $selected; ?>>Steelblue </option>
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'purple-theme') ? 'selected' : '' ; ?>
			<option value="purple-theme" <?php echo $selected; ?>>Purple</option>
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'yellow-theme') ? 'selected' : '' ; ?>
			<option value="yellow-theme" <?php echo $selected; ?>>Yellow</option>
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'red-theme') ? 'selected' : '' ; ?>
			<option value="red-theme" <?php echo $selected; ?>>Red</option>
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'magenta-theme') ? 'selected' : '' ; ?>
			<option value="magenta-theme" <?php echo $selected; ?>>Magenta </option>
			<?php $selected = (isset( $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] ) && $this->fotorama_elevation_options['colour_theme_for_leaflet_elevation_1'] === 'lightblue-theme') ? 'selected' : '' ; ?>
			<option value="lightblue-theme" <?php echo $selected; ?>>Lightblue</option>
		</select> <?php
	}

	public function path_to_gpx_files_2_callback() {
		printf(
			'<input class="regular-text" type="text" name="fotorama_elevation_option_name[path_to_gpx_files_2]" id="path_to_gpx_files_2" value="%s">',
			isset( $this->fotorama_elevation_options['path_to_gpx_files_2'] ) ? esc_attr( $this->fotorama_elevation_options['path_to_gpx_files_2']) : ''
		);
	}

	public function download_gpx_files_3_callback() {
		printf(
			'<input type="checkbox" name="fotorama_elevation_option_name[download_gpx_files_3]" id="download_gpx_files_3" value="download_gpx_files_3" %s> <label for="download_gpx_files_3">Provide download link for GPX-Files</label>',
			( isset( $this->fotorama_elevation_options['download_gpx_files_3'] ) && $this->fotorama_elevation_options['download_gpx_files_3'] === 'download_gpx_files_3' ) ? 'checked' : ''
		);
	}

	public function show_caption_4_callback() {
		printf(
			'<input type="checkbox" name="fotorama_elevation_option_name[show_caption_4]" id="show_caption_4" value="show_caption_4" %s> <label for="show_caption_4">Show the Caption in Fotorama</label>',
			( isset( $this->fotorama_elevation_options['show_caption_4'] ) && $this->fotorama_elevation_options['show_caption_4'] === 'show_caption_4' ) ? 'checked' : ''
		);
	}

	public function images_with_gps_required_5_callback() {
		printf(
			'<input type="checkbox" name="fotorama_elevation_option_name[images_with_gps_required_5]" id="images_with_gps_required_5" value="images_with_gps_required_5" %s> <label for="images_with_gps_required_5">Show images only if they provide GPS-Data in EXIF</label>',
			( isset( $this->fotorama_elevation_options['images_with_gps_required_5'] ) && $this->fotorama_elevation_options['images_with_gps_required_5'] === 'images_with_gps_required_5' ) ? 'checked' : ''
		);
	}

	public function ignore_custom_sort_6_callback() {
		printf(
			'<input type="checkbox" name="fotorama_elevation_option_name[ignore_custom_sort_6]" id="ignore_custom_sort_6" value="ignore_custom_sort_6" %s> <label for="ignore_custom_sort_6">Ignore custom sort even if provided by Wordpress. Sort ascending by date taken if checked.</label>',
			( isset( $this->fotorama_elevation_options['ignore_custom_sort_6'] ) && $this->fotorama_elevation_options['ignore_custom_sort_6'] === 'ignore_custom_sort_6' ) ? 'checked' : ''
		);
	}

	public function show_address_of_start_7_callback() {
		printf(
			'<input type="checkbox" name="fotorama_elevation_option_name[show_address_of_start_7]" id="show_address_of_start_7" value="show_address_of_start_7" %s> <label for="show_address_of_start_7">Show the address of the starting point (taken from the first image or GPX-coordinate in the GPX-track)</label>',
			( isset( $this->fotorama_elevation_options['show_address_of_start_7'] ) && $this->fotorama_elevation_options['show_address_of_start_7'] === 'show_address_of_start_7' ) ? 'checked' : ''
		);
	}

	public function text_for_start_address_8_callback() {
		printf(
			'<input class="regular-text" type="text" name="fotorama_elevation_option_name[text_for_start_address_8]" id="text_for_start_address_8" value="%s">',
			isset( $this->fotorama_elevation_options['text_for_start_address_8'] ) ? esc_attr( $this->fotorama_elevation_options['text_for_start_address_8']) : ''
		);
	}

	public function general_text_for_the_fotorama_alt_9_callback() {
		printf(
			'<input class="regular-text" type="text" name="fotorama_elevation_option_name[general_text_for_the_fotorama_alt_9]" id="general_text_for_the_fotorama_alt_9" value="%s">',
			isset( $this->fotorama_elevation_options['general_text_for_the_fotorama_alt_9'] ) ? esc_attr( $this->fotorama_elevation_options['general_text_for_the_fotorama_alt_9']) : ''
		);
	}

	public function height_of_map_10_callback() {
		printf(
			'<input class="regular-text" type="text" name="fotorama_elevation_option_name[height_of_map_10]" id="height_of_map_10" value="%s">',
			isset( $this->fotorama_elevation_options['height_of_map_10'] ) ? esc_attr( $this->fotorama_elevation_options['height_of_map_10']) : ''
		);
	}

	public function height_of_chart_11_callback() {
		printf(
			'<input class="regular-text" type="text" name="fotorama_elevation_option_name[height_of_chart_11]" id="height_of_chart_11" value="%s">',
			isset( $this->fotorama_elevation_options['height_of_chart_11'] ) ? esc_attr( $this->fotorama_elevation_options['height_of_chart_11']) : ''
		);
	}

	public function max_width_of_container_12_callback() {
		printf(
			'<input class="regular-text" type="text" name="fotorama_elevation_option_name[max_width_of_container_12]" id="max_width_of_container_12" value="%s">',
			isset( $this->fotorama_elevation_options['max_width_of_container_12'] ) ? esc_attr( $this->fotorama_elevation_options['max_width_of_container_12']) : ''
		);
	}

}


/* 
 * Retrieve this value with:
 * $fotorama_elevation_options = get_option( 'fotorama_elevation_option_name' ); // Array of All Options
 * $path_to_images_for_fotorama_0 = $fotorama_elevation_options['path_to_images_for_fotorama_0']; // Path to Images for Fotorama
 * $colour_theme_for_leaflet_elevation_1 = $fotorama_elevation_options['colour_theme_for_leaflet_elevation_1']; // Colour Theme for Leaflet Elevation
 * $path_to_gpx_files_2 = $fotorama_elevation_options['path_to_gpx_files_2']; // Path to GPX-Files
 * $download_gpx_files_3 = $fotorama_elevation_options['download_gpx_files_3']; // Download GPX-Files
 * $show_caption_4 = $fotorama_elevation_options['show_caption_4']; // Show Caption
 * $images_with_gps_required_5 = $fotorama_elevation_options['images_with_gps_required_5']; // Images with GPS required
 * $ignore_custom_sort_6 = $fotorama_elevation_options['ignore_custom_sort_6']; // Ignore custom sort
 * $show_address_of_start_7 = $fotorama_elevation_options['show_address_of_start_7']; // Show address of start
 * $text_for_start_address_8 = $fotorama_elevation_options['text_for_start_address_8']; // Text for Start address
 * $general_text_for_the_fotorama_alt_9 = $fotorama_elevation_options['general_text_for_the_fotorama_alt_9']; // General text for the Fotorama alt
 * $height_of_map_10 = $fotorama_elevation_options['height_of_map_10']; // Height of Map
 * $height_of_chart_11 = $fotorama_elevation_options['height_of_chart_11']; // Height of Chart
 * $max_width_of_container_12 = $fotorama_elevation_options['max_width_of_container_12']; // Max Width of Container
 */
